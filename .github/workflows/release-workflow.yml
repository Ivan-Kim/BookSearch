name: Sign/Release

on:
  push:
    tags:
      - 'v*'
jobs:
  release:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Get Tag
        id: var
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Update Naver API Secret
        env:
          ClientId: ${{ secrets.NAVER_CLIENT_ID }}
          ClientSecret: ${{ secrets.NAVER_CLIENT_SECRET }}
        run: |
          echo X-Naver-Client-Id="$ClientId" >> ./local.properties
          echo X-Naver-Client-Secret="$ClientSecret" >> ./local.properties

      - name: Update Signing Config Secret
        env:
          KeyAlias: ${{ secrets.SIGNING_KEY_ALIAS }}
          KeyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
          KeyStoreFile: ${{ secrets.KEYSTORE_FILE }}
          KeyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          echo KeyStoreFile | base64 --decode > MyKeyStore.jks
          wait
          echo keyAlias=$KeyAlias >> ./keystore.properties
          echo keyPassword=$KeyPassword >> ./keystore.properties
          echo storePassword=$KeyStorePassword >> ./keystore.properties
          echo storeFile=MyKeyStore.jks >> ./keystore.properties

      - name: Build APK
        id: build
        run: bash ./gradlew assembleRelease

      - name: Build AAB
        run: bash ./gradlew bundleRelease

      - name: Make artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-artifacts
          paths: |
            app/build/outputs/apk/release/
            app/build/outputs/bundle/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: BookSearch-release-signed-${{ steps.var.outputs.tag }}.apk
          asset_content_type: application/zip

      - name: Upload AAB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/release/app-release.aab
          asset_name: BookSearch-release-signed-${{ steps.var.outputs.tag }}.aab
          asset_content_type: application/zip
